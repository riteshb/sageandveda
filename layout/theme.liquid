<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  {% if template.name contains 'cart' %}
  <style>
    /* Force readable text in the cart/order summary (Iva3) */
    .cart-summary,
    .cart-summary * {
      color: #000 !important;
    }
    /* Keep buttons readable (donâ€™t override their text colors) */
    .cart-summary .button, 
    .cart-summary .shopify-payment-button__button,
    .cart-summary .shopify-payment-button__more-options,
    .cart-summary .shopify-cleanslate [role="button"] {
      color: inherit !important;
    }
  </style>
{% endif %}
  <head>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-16990829846"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-16990829846');
</script>
    <meta name="facebook-domain-verification" content="880ueyncwedojzcb0ssurwpzre48ro">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="{{ settings.color_primary }}">
    <meta name="p:domain_verify" content="43260539ac78a776a280f62bc0aa2b97">
    

    
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <link rel="preconnect" href="https://fonts.shopify.com" crossorigin>
    <link rel="preconnect" href="https://monorail-edge.shopifysvc.com">

    {%- if canonical_url != blank -%}
      <link rel="canonical" href="{{ canonical_url }}">
    {%- endif -%}

    {%- if settings.favicon != blank -%}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '16x16' }}" type="image/png">
    {%- endif -%}

    {% include 'SEO-tags' %}

    <!-- Social meta ================================================== -->
    {% include 'social-meta-tags' %}


  
  {% comment %} Smart Font Loader - Must be loaded early to prevent CORS issues {% endcomment %}
  {% render 'smart-font-loader' %}
    
    {{ 'dt-framework.css' | asset_url | stylesheet_tag }}
    {{ 'dt-custom.css' | asset_url | stylesheet_tag }}
    {{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}
    {% unless template contains 'customers' or template contains 'cart' %}
      {{ 'select2.min.css' | asset_url | stylesheet_tag }}
    {% endunless %}
    {{ 'slick.css' | asset_url | stylesheet_tag }}
    {{ 'font-all.min.css' | asset_url | stylesheet_tag }}
    
    {% comment %} Custom button styling is now in dt-custom.css.liquid {% endcomment %}

    <!-- Load jQuery first without defer to make it globally available -->
    <script src="{{ 'jquery-3.5.1.min.js' | asset_url }}"></script>
    <!-- Load jQuery cookie plugin immediately after jQuery -->
    <script src="{{ 'jquery-cookie.min.js' | asset_url }}"></script>
    <!-- Load Handlebars next without defer -->
    <script src="{{ 'handlebars.min.js' | asset_url }}"></script>
    
    <!-- Ensure jQuery is globally available -->
    <script>
      // Wait for jQuery to load and ensure global availability
      function ensureJQuery() {
        if (typeof jQuery !== 'undefined') {
          // jQuery is loaded, ensure global availability
          if (typeof window.$ === 'undefined') {
            window.$ = window.jQuery;
          }
          if (typeof window.jQuery === 'undefined') {
            window.jQuery = window.$;
          }
        } else {
          // jQuery not loaded yet, retry
          setTimeout(ensureJQuery, 50);
        }
      }
      
      // Start checking for jQuery
      ensureJQuery();
      
      // Also check when DOM is ready
      document.addEventListener('DOMContentLoaded', ensureJQuery);
    </script>
    
    <script src="{{ 'api.js' | shopify_asset_url }}" defer="defer"></script>
    <script src="{{ 'ajax-cart.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'dt-plugins.js' | asset_url }}" defer></script>
    {% unless template contains 'customers' or template contains 'cart' %}
      <script src="{{ 'select2.min.js' | asset_url }}" defer="defer"></script>
    {% endunless %}
    <script src="{{ 'slick.min.js' | asset_url }}" defer="defer"></script>

    {% if template contains 'customers' %}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>
      <script src="{{ 'customer_area.js' | shopify_asset_url }}" defer></script>
    {% endif %}
    <!-- connter for header -->
    {{ content_for_header }}
    <!-- connter for header -->
    
    <!-- Global script dependency manager -->
    <script>
      // Create a global queue for scripts that need jQuery
      window.jQueryReadyCallbacks = [];
      
      // Function to run when jQuery is ready
      window.runWhenJQueryReady = function(callback) {
        if (typeof jQuery !== 'undefined' && typeof $ !== 'undefined') {
          callback();
        } else {
          window.jQueryReadyCallbacks.push(callback);
        }
      };
      
      // Check if jQuery is ready and run queued callbacks
      function checkJQueryAndRun() {
        if (typeof jQuery !== 'undefined' && typeof $ !== 'undefined') {
          while (window.jQueryReadyCallbacks.length > 0) {
            try {
              window.jQueryReadyCallbacks.shift()();
            } catch (e) {
              console.error('Error in jQuery ready callback:', e);
            }
          }
        } else {
          setTimeout(checkJQueryAndRun, 100);
        }
      }
      
      // Start checking
      checkJQueryAndRun();
      
      // Override problematic jQuery calls
      window.$ = window.$ || function() {
        console.warn('jQuery not ready yet, queuing call');
        return {
          ready: function(callback) {
            window.runWhenJQueryReady(callback);
          },
          on: function() {},
          off: function() {},
          find: function() { return []; },
          addClass: function() { return this; },
          removeClass: function() { return this; },
          css: function() { return this; },
          hide: function() { return this; },
          show: function() { return this; },
          data: function() { return null; },
          select2: function() { return this; }
        };
      };
      
      window.jQuery = window.jQuery || window.$;
    </script>

    <script>
      var DT_THEME = {
        strings: {
          addToWishList: {{ 'products.product.addToWishList' | t | json }},
          viewMyWishList: {{ 'products.product.viewMyWishList' | t | json }},
          addToCompareList: {{ 'products.product.addToCompareList' | t | json }},
          viewMyCompareList: {{ 'products.product.viewMyCompareList' | t | json }},
          addToCart: {{ 'products.product.add_to_cart' | t | json }},
          soldOut: {{ 'products.product.sold_out' | t | json }},
          unavailable: {{ 'products.product.unavailable' | t | json }},
          minCompareProductNav: {{ 'products.product.minCompareProductNav' | t | json }},
          minCompareProduct: {{ 'products.product.minCompareProduct' | t | json }}
        },
        moneyFormat: {{ shop.money_format | json }}
      };
    </script>
    
  {% include 'pagefly-app-header' %}</head>
  <body
    id="{{ page_title | handle }}"
    class="{% if settings.home_sidebar   %}{% endif %} {% if settings.enable_boxed %}body-boxed {% endif %}{% if customer %}customer-logged-in {% endif %}template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }} {% unless tempate contains 'index' %} others {% endunless %}"
    style="{% if settings.boxed_bg_image != blank %}background-image:url('{{ settings.boxed_bg_image | img_url: 'master' }}');background-attachment:fixed;background-repeat:no-repeat;background-position:center center;{% endif %}"
  >
    {% section 'BlackMango-Regular-custom-font' %}

    {% if settings.preloader_enable %}
      <div class="se-pre-con"></div>
    {% endif %}
    <div class="mobile-menu" data-menu="dt-main-menu"></div>
    <div class="mobile-menu-overlay"></div>
    <div class="off-canvas--viewport">
      {% if settings.ajax_cart_method == 'drawer' %}
        {% include 'timber-cart' %}
      {% endif %}
      {% section 'header' %}
      {% include 'breadcrumb' %}
      <div class="clearfix"></div>
      <div
        class="shifter-page {% if settings.ajax_cart_method == 'drawer' %}is-moved-by-drawer{% endif %}"
        id="container"
      >
        {{ content_for_layout }}
      </div>
      <div class="clearfix"></div>
    </div>
    {% section 'home-support-block' %}
    {% section 'footer' %}
    <script src="{{ 'dt-theme.js' | asset_url }}" defer></script>
    <script src="{{ 'lazysizes.js' | asset_url }}" async="async"></script>
    {% if template contains 'article' or template contains 'product' %}
      {% if settings.social_sharing_blog or settings.social_sharing_products %}
        <script src="{{ 'social-buttons.js' | asset_url }}" defer></script>
      {% endif %}
    {% endif %}
    {% section 'modal-newsletter' %}
    {% section 'gdpr-cookies' %}
    {% section 'customer-purchased' %}
    {% render 'dT_loading-overlay' %}
    <!--
      <script src="{{ 'dT_bundle_base.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'dT_bundle.js' | asset_url }}" defer="defer"></script>
    -->
    <script src="{{ 'dT_main.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'dT_main_app.js' | asset_url }}" defer="defer"></script>
    {% include 'ajax-cart-template' %}
    <script>
      // Ensure jQuery and Handlebars are available
      if (typeof Handlebars !== 'undefined') {
        Handlebars.registerHelper('formatPrice', function (aString) {
            return new Handlebars.SafeString(aString);
        });
      }

      // Wait for jQuery to be available
      function initializeSelect2() {
        if (typeof $ !== 'undefined' && typeof $.fn !== 'undefined') {
          if ($('#shipping-calculator select').data('select2')) {
            $("#shipping-calculator select").select2('destroy');
          }

          if ($('.dT_bundleSelector select').data('select2')) {
            $(".dT_bundleSelector select").select2('destroy');
          }

          {% unless template contains 'customers' or template contains 'cart' %}
          $('select').select2({  minimumResultsForSearch: Infinity, theme: "classic" });
          {% endunless %}
        } else {
          // Retry after a short delay
          setTimeout(initializeSelect2, 100);
        }
      }

      // Initialize when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeSelect2);
      } else {
        initializeSelect2();
      }
    </script>
    <script>
            document.addEventListener("DOMContentLoaded", function() {
          let savedCart = localStorage.getItem("cart");

          if (savedCart) {
              fetch("/cart/update.js", {
                  method: "POST",
                  body: JSON.stringify({ updates: JSON.parse(savedCart) }),
                  headers: { "Content-Type": "application/json" }
              });
          }

          fetch("/cart.js")
              .then(response => response.json())
              .then(data => {
                  localStorage.setItem("cart", JSON.stringify(data.items));
              });
      });
    </script>
    {% include 'scroll-to-top' %}
  </body>
</html>
